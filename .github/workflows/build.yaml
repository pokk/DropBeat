name: Build Workflow

on: [push]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}

      - name: Clone Repo
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Decode All configuration files
      - name: Decode all configuration files
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          FACEBOOK_KEYS: ${{ secrets.FACEBOOK_KEYS }}
          LASTFM_KEYS: ${{ secrets.LASTFM_KEYS }}
          SSL_CERTFICATION: ${{ secrets.SSL_CERTFICATION }}
        run: |
          echo "$FIREBASE_CONFIG" > app/google-services.json
          echo "$FACEBOOK_KEYS" > app/src/main/res/values/facebook_key.xml
          echo "$LASTFM_KEYS" > feature/explore/src/main/res/values/keys.xml
          echo" $SSL_CERTFICATION" > core/src/main/res/raw/mycertfile.crt

      - name: Creating local properties file
        env:
          SEEK_SONG_URI_REQUEST: ${{ secrets.API.SEEK_SONG_URI_REQUEST }}
          SEEK_SONG_URI_DOMAIN: ${{ secrets.API.SEEK_SONG_URI_DOMAIN }}
          SEEK_SONG_QUERY_2: ${{ secrets.API.SEEK_SONG_QUERY_2 }}
          SEEK_SONG_QUERY_1: ${{ secrets.API.SEEK_SONG_QUERY_1 }}
          SEEK_SONG_PARAM_2: ${{ secrets.API.SEEK_SONG_PARAM_2 }}
          SEEK_SONG_PARAM_1: ${{ secrets.API.SEEK_SONG_PARAM_1 }}
          LYRIC_URI_DOMAIN: ${{ secrets.API.LYRIC_URI_DOMAIN }}
          SONG_URI_DOMAIN: ${{ secrets.API.SONG_URI_DOMAIN }}
          SONG_URI_REQUEST: ${{ secrets.API.SONG_URI_REQUEST }}
          LYRIC_URI_REQUEST: ${{ secrets.API.LYRIC_URI_REQUEST }}
          RANKING_URI_REQUEST: ${{ secrets.API.RANKING_URI_REQUEST }}
          RANKING_URI_DOMAIN: ${{ secrets.API.RANKING_URI_DOMAIN }}
        run: |
          echo -e "\nseek_song_uri_request=\"$SEEK_SONG_URI_REQUEST\"" >> local.properties
          echo -e "\nseek_song_uri_domain=\"$SEEK_SONG_URI_DOMAIN\"" >> local.properties
          echo -e "\nseek_song_query_2=\"$SEEK_SONG_QUERY_2\"" >> local.properties
          echo -e "\nseek_song_query_1=\"$SEEK_SONG_QUERY_1\"" >> local.properties
          echo -e "\nseek_song_param_2=\"$SEEK_SONG_PARAM_2\"" >> local.properties
          echo -e "\nseek_song_param_1=\"$SEEK_SONG_PARAM_1\"" >> local.properties
          echo -e "\nlyric_uri_domain=\"$LYRIC_URI_DOMAIN\"" >> local.properties
          echo -e "\nsong_uri_domain=\"$SONG_URI_DOMAIN\"" >> local.properties
          echo -e "\nsong_uri_request=\"$SONG_URI_REQUEST\"" >> local.properties
          echo -e "\nlyric_uri_request=\"$LYRIC_URI_REQUEST\"" >> local.properties
          echo -e "\nranking_uri_request=\"$RANKING_URI_REQUEST\"" >> local.properties
          echo -e "\nranking_uri_domain=\"$RANKING_URI_DOMAIN\"" >> local.properties
          more local.properties

      # Step 4: Yun your unit tests
      #      - name: Run Unit Tests
      #        run: ./gradlew testStagingDebugUnitTest

      # Step 4: Assemble debug apk to send to firebase test lab
      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
        if: always() # Pick up events even if the job fails or is canceled.
