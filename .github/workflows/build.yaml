name: Build Workflow

on: [push]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Clone Repo
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Setup keystore
        env:
          SIGNING_KEY: ${{ secrets.RELEASE_KEYSTORE }}
        run: echo $SIGNING_KEY | base64 -di > taiwanno1_release.keystore

      - name: Decode firebase configuration file
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json

      - name: Decode other configuration files
        env:
          FACEBOOK_KEYS: ${{ secrets.FACEBOOK_KEYS }}
          LASTFM_KEYS: ${{ secrets.LASTFM_KEYS }}
          SSL_CERTFICATION: ${{ secrets.SSL_CERTFICATION }}
        run: |
          echo $FACEBOOK_KEYS > app/src/main/res/values/facebook_key.xml
          echo $LASTFM_KEYS > feature/explore/src/main/res/values/keys.xml
          echo $SSL_CERTFICATION > core/src/main/res/raw/mycertfile.crt

      - name: Creating local properties file
        env:
          SEEK_SONG_URI_REQUEST: ${{ secrets.SEEK_SONG_URI_REQUEST }}
          SEEK_SONG_URI_DOMAIN: ${{ secrets.SEEK_SONG_URI_DOMAIN }}
          SEEK_SONG_QUERY_2: ${{ secrets.SEEK_SONG_QUERY_2 }}
          SEEK_SONG_QUERY_1: ${{ secrets.SEEK_SONG_QUERY_1 }}
          SEEK_SONG_PARAM_2: ${{ secrets.SEEK_SONG_PARAM_2 }}
          SEEK_SONG_PARAM_1: ${{ secrets.SEEK_SONG_PARAM_1 }}
          LYRIC_URI_DOMAIN: ${{ secrets.LYRIC_URI_DOMAIN }}
          SONG_URI_DOMAIN: ${{ secrets.SONG_URI_DOMAIN }}
          SONG_URI_REQUEST: ${{ secrets.SONG_URI_REQUEST }}
          LYRIC_URI_REQUEST: ${{ secrets.LYRIC_URI_REQUEST }}
          RANKING_URI_REQUEST: ${{ secrets.RANKING_URI_REQUEST }}
          RANKING_URI_DOMAIN: ${{ secrets.RANKING_URI_DOMAIN }}
          KEYSTORE_PASSWORD: ${{ secrets.RANKING_URI_DOMAIN }}
          KEY_ALIAS: ${{ secrets.RANKING_URI_DOMAIN }}
          KEY_PASSWORD: ${{ secrets.RANKING_URI_DOMAIN }}
        run: |
          echo -e "seek_song_uri_request=\"$SEEK_SONG_URI_REQUEST\"" >> local.properties
          echo -e "\nseek_song_uri_domain=\"$SEEK_SONG_URI_DOMAIN\"" >> local.properties
          echo -e "\nseek_song_query_2=\"$SEEK_SONG_QUERY_2\"" >> local.properties
          echo -e "\nseek_song_query_1=\"$SEEK_SONG_QUERY_1\"" >> local.properties
          echo -e "\nseek_song_param_2=\"$SEEK_SONG_PARAM_2\"" >> local.properties
          echo -e "\nseek_song_param_1=\"$SEEK_SONG_PARAM_1\"" >> local.properties
          echo -e "\nlyric_uri_domain=\"$LYRIC_URI_DOMAIN\"" >> local.properties
          echo -e "\nsong_uri_domain=\"$SONG_URI_DOMAIN\"" >> local.properties
          echo -e "\nsong_uri_request=\"$SONG_URI_REQUEST\"" >> local.properties
          echo -e "\nlyric_uri_request=\"$LYRIC_URI_REQUEST\"" >> local.properties
          echo -e "\nranking_uri_request=\"$RANKING_URI_REQUEST\"" >> local.properties
          echo -e "\nranking_uri_domain=\"$RANKING_URI_DOMAIN\"" >> local.properties
          echo -e "\nstore_password=$KEYSTORE_PASSWORD" >> local.properties
          echo -e "\nkey_alias=$KEY_ALIAS" >> local.properties
          echo -e "\nkey_password=$KEY_PASSWORD" >> local.properties

      #      - name: Run Unit Tests
      #        run: ./gradlew test

      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          job_name: Build
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        if: always() # Pick up events even if the job fails or is canceled.
